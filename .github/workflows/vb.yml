name: Version Bump Tester

on:
  #Could automate this further by a making it a workflow_call, summoned from any SDK once it has a new tag; or another cron job on a schedule.
  workflow_dispatch:
    inputs:
      sdk:
        type: choice
        options: #No support yet to have dynamic inputs, say types from a json file.
          - sdk1
          - sdk2
          - lodash
        description: "Library to bump"
        required: true
        default: "lodash"
      version: #Do we not bump to the latest always? If so, we wont really need this.
        description: "Release Version" 
        required: true
        default: "4.17.21"

jobs:

  get_consumers_for_sdk:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
    
      - id: jq_consumers
        run: |
          echo $(jq -c '.lodash.consumer' <<< $(cat ./sdks.json))
          echo "::set-output name=consumers::$(jq -c '.lodash.consumer' <<< $(cat ./sdks.json))"
 
    outputs:
      consumers: ${{ steps.jq_consumers.outputs.consumers }}

  check-inputs:
    runs-on: ubuntu-latest
    needs: get_consumers_for_sdk
    steps:
      - name: Check inputs
        run: |
          echo "From env.: ${{ env.CONSUMERS }}"
          echo ${{ github.event.inputs.sdk }}
          echo ${{ github.event.inputs.version }}
          echo "Got json: ${{needs.get_consumers_for_sdk.outputs.consumers}}"
          echo ${{fromJSON(needs.get_consumers_for_sdk.outputs.consumers)}}
#         echo "Working with ${{ matrix.target }}"

  bump-consumer:
    runs-on: ubuntu-latest
    needs: get_consumers_for_sdk
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get_consumers_for_sdk.outputs.consumers)}}
#       target: [consumer-A, consumer-B]
#       target: ${{fromJson(needs.get_consumers_for_sdk.outputs.consumers)}}
#         target:
#           - consumer-A
#           - consumer-B
        
    steps:
          
      - name: Set Global Data
        id: global_data
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          #echo "::set-output name=repo::$(yarn run --silent cli print-sdk-repo --sdk ${{ matrix.target }})"
      
      - name: Checkout ${{ matrix.target }}
        uses: actions/checkout@v2
        with:
          token: ${{secrets.TOKEN}}
          repository: sujanp-kr/${{ matrix.target }}
          path: ${{ matrix.target }}
          
      - name: Update SDK version
        run: |
          cd ${{ matrix.target }}
          yarn add -D ${{ github.event.inputs.sdk }}@${{ github.event.inputs.version }}
          cat package.json
      
      - name: Create Pull Request in ${{ matrix.target }}
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.TOKEN }}
          path: ${{ matrix.target }}
          commit-message: "Bump ${{github.event.inputs.sdk}} to ${{github.event.inputs.version}}"
          committer: katomation <noreply@kroger.com>
          author: katomation <automation@user.noreply.kroger.com>
          signoff: false
          base: main
          branch: automation/version-bump-${{github.event.inputs.sdk}}-${{steps.global_data.outputs.date}}
          delete-branch: true
          title: "[Automation] Bump ${{github.event.inputs.sdk}} to ${{github.event.inputs.version}}"
          body: |
            Bump sdk version
            - Updated ${{steps.global_data.outputs.date}}
            - Auto-generated by Katomatic
          labels: version-patch
          assignees: sujanp-kr
          team-reviewers: |
            owners
            maintainers
          draft: false
          
